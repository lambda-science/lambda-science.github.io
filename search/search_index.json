{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Corentin Meyer, PhDAI Engineer @ ALEBiomedical AI PhD"},{"location":"#science-and-data-for-ordinary-people","title":"Science and data for ordinary people.","text":"<p>I'm Corentin Meyer and I have a PhD in Biomedical AI and I'm currently working as an AI Engineer at Alcatel-Lucent Enterprise (ALE). This is my personal website and blog that to communicate concepts about science, code and data. Blog posts here: Blog &amp; TILs. More about me &amp; projects here: About Me. My main open-source projects are NLMyo\ud83d\udd27, MyoQuant\ud83d\udd2c and IMPatienT\ud83d\uddc2\ufe0f</p> <ul> <li> LinkedIn Corentin Meyer</li> <li> Email contact@cmeyer.fr</li> <li>:simple-twitter: Twitter @corentinm_py</li> <li> GitHub @lambda-science</li> </ul> <p> </p>"},{"location":"aboutme/","title":"About","text":""},{"location":"aboutme/#who-am-i","title":"Who am I","text":"<p>I'm Corentin Meyer, I have a PhD in Biomedical AI and currently work as an AI Engineer at Alcatel-Lucent Enterprise (ALE). I combine both expertise in computer science (data science, AI/ML research, development and engineering and software development) as well as strong scientific expertise with 5 years background in biotechnology. I enjoy using my skills for health-related topics both as a biologist and computer scientist. What I enjoy the most is actually creating tools for non-technical people that automatize long task and make their life easier. I also love to do some teaching and popularizing science. I used to teach bioinformatics and machine learning (lectures and practicals) at the Biotechnology School of Strasbourg (ESBS).  </p>"},{"location":"aboutme/#why-am-i-doing-with-this","title":"Why am I doing with this","text":"<p>I created this place for multiple reasons:</p> <ul> <li>Sea of complexity - Whenever we are talking about science, code and machine learning, things are always presented in a complicated way. And I believe it doesn't have to be this way. I wish to present things in a simple and calm way.</li> <li>Academic publishing is.. something - I've come to the realization that I don't really like the way academic research is communicated. I want to have my own freedom to publish some science.</li> <li>Creative space &amp; Portfolio - Building my own website allows me to have the full control on how I want to present things about technical subjects related to machine learning, data or biology. I also wish to use it as a portfolio for what I'm working on.</li> <li>Teaching and popularizing - Writing blog posts is also another way of teaching and popularizing science.</li> </ul> <p>So... here are the reasons why Lambda Science blog exists.</p>"},{"location":"aboutme/#main-open-source-projects-phd","title":"Main Open-Source Projects (PhD)","text":""},{"location":"aboutme/#myoquant","title":"MyoQuant","text":"<p>A tool to automatically quantify pathological features in muscle fiber histology images</p> <ul> <li> MyoQuant Code</li> <li> MyoQuant Demo</li> </ul>"},{"location":"aboutme/#nlmyo","title":"NLMyo","text":"<p>A toolbox built to leverage the power of Large Language Models (LLMs) to exploit histology text reports</p> <ul> <li> NLMyo Code</li> <li> NLMyo Demo</li> </ul>"},{"location":"aboutme/#impatient","title":"IMPatienT","text":"<p>An integrated web application to digitize, process and explore multimodal patient data</p> <ul> <li> IMPatienT Code</li> <li>  IMPatienT Demo</li> </ul>"},{"location":"aboutme/#misc","title":"Misc.","text":"<ul> <li> Status Page</li> <li> HuggingFace @corentinm7</li> <li> GitHub @lambda-science</li> </ul>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/#lambda-science-blog","title":"Lambda Science Blog","text":""},{"location":"blog/hide-and-seek-ai-with-deep-reinforcement-learning/","title":"Hide and Seek AI agent with Deep Reinforcement Learning","text":"<p>A simple introduction to deep reinforcement learning and how I trained an AI agent that play hide and seek in a random 2D map</p> <p>In this small blog post, I'm going to show you how I coded an AI that is able to play hide and seek in a 2D map. Here is what it looks like in the end:</p> <p></p>"},{"location":"blog/hide-and-seek-ai-with-deep-reinforcement-learning/#whats-reinforcement-learning","title":"What's Reinforcement Learning","text":"<p>Let's start with the basics of reinforcement learning. Contrary to supervised learning where you have a dataset that you learn on, in reinforcement learning you don't have a pre-existing dataset, you have an environment. Reinforcement learning is used for iterative tasks such as playing chess for example or teaching a robot how to walk.</p> <p>Your AI model called an agent is going to learn by exploring this environment by taking action. For each action performed, the agent will get a reward (or penalty) to indicate if it was a good action or not, to learn what we call a policy. The end goal of the AI agent is to maximize his rewards by learning an efficient policy.</p> <p>The cooking recipe for a reinforcement learning task:</p> <ul> <li>an environment, created here using <code>gymnasium</code> python library.</li> <li>a set of actions (defined by the environment) and observation space (what information has the agents to decide on the action, defined by the environment)</li> <li>a reward function with an end goal (winning, hiding, defined by the environment)</li> <li>a training algorithm to learn a policy such as Deep Q-Learning, here using <code>Stable-Baselines3</code> python library.</li> </ul>"},{"location":"blog/hide-and-seek-ai-with-deep-reinforcement-learning/#problem-description-ai-goal","title":"Problem Description &amp; AI Goal","text":"<p>In this project we want to create an AI model that is able to hide in a 2D map. The guard (player) is placed randomly and the AI model needs to move to find a good hiding spot. What is a good hiding spot you're going to ask, I have defined it as such: good hiding spots are the 3 tiles from the map that are the furthest away from the guard, with no direct line of sight from the guard and that has at least 2 adjacent obstacles.</p> <p>If we take our recipe here is what it looks like:</p> <ul> <li>environnement: a 12x12 2D matrix with 3 to 4 randomly placed obstacles, a randomly placed guard and our randomly placed agent</li> <li>actions &amp; observation space: moving up down left and right, the agent has access to all (part 1) or partial (part 2) information (all elements positions)</li> <li>reward: +1 if reaching a good hiding spot</li> </ul>"},{"location":"blog/hide-and-seek-ai-with-deep-reinforcement-learning/#pre-determined-map-with-custom-environment-and-deep-q-learning-dqn","title":"Pre-determined map with custom environment and Deep Q-Learning (DQN)","text":"<p>In this first iteration, I decided to start small. I created my own gym environment with the official documentation, in which the map is predefined by hand with 4 main obstacles and the agent has access to all information about the current state of the environment.</p> <p>I trained an AI model with the DQN algorithm using the <code>MlpPolicy</code> for 20M time steps (actions), and a high exploration rate (more information in the repository). Here is what the training curves looks like (full logs):</p> <p></p> <p>On the right we have the mean rewards over all training steps, we see that our agent is always capable of finding a good hiding spot (success when reward = 1). On the left we have the mean number of steps taken by our agent to find a good hiding spot. We can see that it decreases overtime to reach a minimum of around 8 steps. This means that during training our agent is more and more efficient at finding a good hiding spot fast.</p> <p>Here is our trained agent solving the environment:</p> <p> Blue is our agent, red is the guard, green is good hiding spots, black are pillars.</p> <p>This works very well on a predefined map, however, there are two issues: (i) the training takes a long time, 20M steps took around 10h to reach (ii) when training on random map the agent is not capable of finding good hiding spots, the average number of steps to reach the spots does not decrease.</p>"},{"location":"blog/hide-and-seek-ai-with-deep-reinforcement-learning/#random-map-with-minigrid-env-and-ppo-algorithm","title":"Random map with Minigrid env and PPO algorithm","text":"<p>To solve previous issues we changed two things: (i) we used a new environment called MiniGrid that I modified for this project (ii) we used a new training algorithm called PPO.</p> <p>(i) The minigrid is similar to our previous environment, however, this environment in represented as an image (not a flat observation space) AND the agent only have access to a 6x6 square observation in front of him, not all the map. (ii) PPO uses a different training approach that in my experience has been proven more efficient in terms of performance and time.</p> <p>So we trained this PPO model with the CNN policy (image) for 10M time steps (actions), and a high exploration rate on this new Minigrid random map environment (more information in the repository).</p> <p>Here is what the training curves looks like (full logs):</p> <p></p> <p>Way noisier than before BUT at least we can see that the mean reward is very close to 1 and that the average number of steps to find a good hiding spots decrease over time to reach around 18 in the final model state. The number of steps is slightly higher than before because in this environment there is more action, the agent has to turn on himself to move.</p> <p>Here is our trained agent solving our new random environment (orange lava represents the guard player):</p> <p></p> <p>And with that we just trained an AI model capable of playing hide and seek in a random map environment using deep reinforcement leaning ! \ud83e\udd73</p> <p>If you want more information about this, you can check out my repository with the code and a more detailed Readme. You can also follow me on twitter to keep you updated on my posts: @corentinm_py</p>"},{"location":"blog/benchmarking-embbedding-models---openai-vs-instructor/","title":"Benchmarking Embbedding Models - OpenAI vs Instructor","text":"<p>A real-life example of Embedding Models performances</p>"},{"location":"blog/benchmarking-embbedding-models---openai-vs-instructor/#introduction","title":"Introduction","text":"<p>With ChatGPT and GPT-4, OpenAI API is very popular for any large language models (LLMs) workflow implementation. One popular workflow is raw text classification: you input a text, you get a label. It can be anything: sentiment, diagnosis, toxicity. Text classification is based on the concept of embeddings: turning text into a high-dimension numerical vector that captures the semantic meaning of your text.</p> <p>OpenAI embeddings models are fast and simple to use, but they represent a privacy issue: you might not want to send your private data to an external API (even if they claim to not keeping your data and not using them for training in their ToS). The idea of this blog post is to compare the embedding models performances of OpenAI embeddings to self-hosted solution available such as Instructor-Large on real-life data.</p> <p>I've done this benchmark because I'm actively developing tools based on LLM to process and exploit biomedical text data to help with research on rare disease: check out NLMyo https://github.com/lambda-science/NLMyo and its online demo.</p>"},{"location":"blog/benchmarking-embbedding-models---openai-vs-instructor/#methodology","title":"Methodology","text":"<p>Here we will be trying to do diagnosis prediction. As a dataset, I have 138 fully anonymized text reports describing muscle biopsy observations in french natural-language and the associated diagnosis as label. Table with each label counts:</p> Disease Count Core Myopathy 48 Nemaline Myopathy 44 NON-CM-OTHER 30 Centronuclear Myopathy 16 <p>To compare embedding performances I embedded the data and trained a classification algorithm using a 10-fold cross-validation. Here is a list of comparison I made:</p> <ul> <li>OpenAI embedding vs Instructor-Large embeddings</li> <li>Raw French text (<code>fr</code>) vs English translated text (<code>en</code>) (through DeepL API)</li> <li>Multi-layer perceptron (<code>mlpc</code>) vs Random Forest classifier (<code>rf</code>) (with GridSerach optimization)</li> </ul>"},{"location":"blog/benchmarking-embbedding-models---openai-vs-instructor/#results","title":"Results","text":"<p>Full results are accessible here: https://wandb.ai/lambda-science/myo-text-classify Here is the Summarized results:  From a quick overview of the results, we can notice a few things:</p> <ul> <li> <p>In terms of general accuracy: all conditions performed more or less equally (OpenAI vs Instructor vs French vs English vs MLPC vs Random Forest). Differences look negligible in terms of accuracy, but the best performing model is OpenAI embedding on translated text (English) using a multi-layer perceptron.</p> </li> <li> <p>However there is a strong difference in the models for the minority class classification.</p> </li> <li> <p>OpenAI performed way better than Instructor embedding in all situations. The difference is huge for the minority class, less significative for the other classes.</p> </li> <li> <p>More surprisingly, embedding translated text allowed the model to have better performance than embedding raw French text for OpenAI (less significative for Instructor).</p> </li> <li> <p>Finally, multi-layer perceptron seems to outperform random forest in all comparison. But with unseen reports, random forest seems to be more reliable, I suspect there is a strong overfit with MLPC models.</p> </li> </ul> <p>In conclusion, I can say that from a performance point-of-view: the best decision for text classification is still using OpenAI embedding but also to translate your texts into English first. However open-source models are still capable and will hopefully improve in the near future for self-hosted, private solutions solving data-privacy issues.</p> <p>For more information about biomedical data research and LLMs you can follow me on twitter: @corentinm_py</p>"},{"location":"blog/graphic-design-choices-for-an-engineering-mood/","title":"Graphic design choices for an engineering mood","text":"<p>Choosing fonts, colors and shapes to set the right feeling while avoiding round corners.</p>"},{"location":"blog/graphic-design-choices-for-an-engineering-mood/#design-choices-immediately-set-the-mood","title":"Design choices immediately set the mood","text":"<p>If you've been studying computer science, chances are that you also had that professor that has a personal website like this, without any CSS, no colors, no animations, pure content, just like the pure performance of Disk Prices website. This is what peak performance looks like, but it's a strong minority of websites.</p> <p>In the first few seconds of opening a new web page, your perception of the design choice, including fonts, colors, shape of elements and arrangement of elements immediately set your mood and first opinion of it.</p> <p>Companies such as Apple, Google and all tech start-ups understood this and play with these parameters to shape their product image. Take Apple's macOS Ventura page, for example. It's made of a lot of free space, big fonts, animation, colorful texts, images, round shape boxes and free space. This page gives a consumer-friendly vibe that is playful, easy-to-use and enjoyable products.</p> <p>For a long time I was digging this look, and wanted to mimic it. However now I feel burnt out of it, everything looks similar. Until I discovered Berkeley Graphics and its twitter account. It's a type foundry that creates graphic guidelines focusing on engineering standards. Their website feels very different, it tickles some kind of simple yet efficient string in me. I would say it was love at first sight. I was wondering why and how. How to make design choices that are giving a professional and engineering mood, instead of a slightly childish, consumer-friendly one.</p>"},{"location":"blog/graphic-design-choices-for-an-engineering-mood/#its-all-about-design-philosophy","title":"It's all about design philosophy","text":"<p>Actually, Berkeley Graphics states very clearly their design philosophy on their website, it's made of 13 rules:</p> <ul> <li>Emergent over prescribed aesthetics.</li> <li>Expose state and inner workings.</li> <li>Dense, not sparse.</li> <li>Explicit is better than implicit.</li> <li>Regiment functionalism.</li> <li>Performance is design.</li> <li>Verbosity over opaqueness.</li> <li>Ignore design trends. Timeless and unfashionable.</li> <li>Flat, not hierarchical.</li> <li>Diametrically opposite of minimalism. As complex as it needs to be.</li> <li>Driven by specifications and datasheets.</li> <li>Beauty emerges automatically without deliberation.</li> <li>Do not infantilize users.</li> </ul> <p>You don't have to remember everything but I feel like if you're making something for professionals and experts: it all comes down to one principle: the first goal is to expose all needed information without fearing complexity.</p>"},{"location":"blog/graphic-design-choices-for-an-engineering-mood/#make-the-right-design-choices","title":"Make the right design choices","text":"<p>Whatever design horizon you choose, you will need to select at least three elements: colors, shapes and fonts. Here I will try to describe a few of these elements I like.</p>"},{"location":"blog/graphic-design-choices-for-an-engineering-mood/#colors-pop-colors-or-light-pastel","title":"Colors: pop colors or light pastel ?","text":"<p>You probably saw these colors and thought, \"Hey, I know these colors !\". They are Google's logo colors and illustrate exactly how a color scheme can define a brand. You have different choices in the colors you pick, from very saturated pop colors to light pastel ones, all defining a different feel. For example, personally I prefer for now light pastel colors, such as the Nord Theme (see image below). These soft bluish colors are soothing for the eyes. Additionally I made them a little bit more saturated for dark-theme terminal using Themer.dev, you can find my theme here.</p> <p>One interesting color schema inspiration would come from official government documents, such as these colors coming from the U.S. Federal Regulations. Colors on these pictograms have been chosen with high attention to be seen and understood by a hundred millions of people and preventing accidents. They are a great source of inspiration for a very functional color scheme that transmits an industrial vibe to a product.</p> <p></p>"},{"location":"blog/graphic-design-choices-for-an-engineering-mood/#shapes-leave-round-corners-for-square-corners","title":"Shapes: leave round corners for square corners","text":"<p>Over recent years, there has been a significant shift in the UX design towards rounded corners. Whereas it is Apple, Google or any of your favorite application, there is a strong chance that they use rounded the corner button. Below is an image from Material Design example, the Google's design system, used in Android and all their app. Everything is round and more importantly it's a huge loss of space. Round corners are a loss of space. Maybe it feels fresh to you, but not to me anymore.</p> <p></p> <p>A refreshing trend in UI shows that square corners can actually produce a great effect. As seen below, from the menu of Berkeley Graphics website, square corners with a light bottom right shade are very simple yet highly effective to represent buttons. This design choice gives a more \"engineering, industrial and retro\" feeling than the previous one, while maximizing readability and usage of free space.</p> <p></p>"},{"location":"blog/graphic-design-choices-for-an-engineering-mood/#fonts-recognizable-yet-forgettable","title":"Fonts: recognizable yet forgettable","text":"<p>Fonts are subconsciously important. People don't notice it, but they can feel when a font changed or is different. To simplify there are two types of font: serif and sans-serif. Serif fonts are your newspaper fonts, great for printed books and wall of texts, they use small decorations for letters, a classic example is <code>Time New Roman</code>. Sans Serif fonts are your typical online fonts, for websites, brand logos and application, a classic example is <code>Helvetica</code>.</p> <p></p> <p>However both these fonts have been overused, mainly by Apple for example for Helvetica, but also on any public sign and brand logo. Helvetica is everywhere and you don't notice it anymore (that's actually part of the genius behind it). It has been used so much that Apple had to create their own personal font called San Francisco to replace it from their products.</p> <p>Font choice comes down to personal preference, but I have some recommendation that I like. Basically, you want a Helvetica look alike that is not Helvetica, that's why I suggest Univers (developed the same year and very similar) as a paid option and Inter as a free and open-source alternative for Sans Serif font.</p> <p>For Serif font, instead of the good old Times New Roman, I suggest the classic Garamond (or Alegreya for a more risky choice).</p> <p>Lastly, for coding and technical specificationn we need a third type of fonts called Mono-Spaced Fonts. In these types of fonts all letters have the same width, creating aligned vertical columns in the text. This is absolutely needed in terminal and code editors.</p> <p>For this I have to absolutely recommend Berkeley Mono, it's a paid font (75$) but I've fallen in love with it and it's the source of inspiration for this post. (Actually, I haven't bought it yet, but I probably will in a near future, when I have a real job.) I mean just look at this:</p> <p></p> <p>It's a mono-spaced font, inspired from Adrian Frutiger's genius (creator of the Univers font) and it has a very pronounced engineering and retro vibe to it. It looks well fitted not only for code but also for any specific technical document. For free alternatives you have different very good mono-spaced fonts such as my favorite Hack, but Jetbrains Mono, Source Pro and Fira Code are all great alternatives.</p> Commercial Font Free Font Sans Serif Univers Inter Serif / Garamond &amp; Alegreya Mono Spaced Berkeley Mono Hack (Jetbrains Mono, Source Pro, Fira Code)"},{"location":"blog/graphic-design-choices-for-an-engineering-mood/#closing-thoughts","title":"Closing Thoughts","text":"<p>I hope that with this blog post you learned a bit about graphic design choices, especially in terms of fonts, colors and shapes and how you can use these tools to give a specific vibe to your projects. I want to share a bit more resources about this, namely this magnificent blog from Berkely Mono creator and this engineering aesthetic Twitter account. On a side note, thinking about engineering aesthetic made me like the brutalism aesthetic that has some kind of special place in my heart.</p> <p>Anyways, this closes this blog post. Don't hesitate to share with me what color scheme, font and design choice you prefer. You can also follow me on twitter to keep you updated on my posts: @corentinm_py</p>"},{"location":"blog/saas-should-die-but-once-is-here/","title":"SaaS should die but ONCE is here","text":"<p>A new, better and retro way to sell software</p>"},{"location":"blog/saas-should-die-but-once-is-here/#saas-makes-everyone-unhappy","title":"SaaS makes everyone unhappy","text":"<p>After paying millions for Slack hosting, Austen, CEO of Bloomtech, had the unfortunate surprise to be asked to pay 78,000$ to extract his own data. This specific case is a bit extreme, but it highlights the issues with SaaS software and giving other company control over your software and data. SaaS is a loss for everyone. </p> <ul> <li> <p>On the customer side: it's easy to set up and can start cheap, but then you are trapped in additional cost, never ending subscriptions and all your belonging are locked in a proprietary system. </p> </li> <li> <p>On the seller side: it's also a trap. Because you sell a service, you need to provide support, maintenance, handle security, SLA... You can't just sell it and forget it. This requires a big team, a lot of work and money.  </p> </li> </ul> <p>Is it possible to escape this pile of complexity that makes everyone unhappy?  </p>"},{"location":"blog/saas-should-die-but-once-is-here/#introducing-dhh-and-once","title":"Introducing DHH and ONCE","text":"<p>DHH is the founder of Ruby On rails, Basecamp, HEY and now ONCE. He is famously known for his stances against cloud hosting (vs. on premise), apple fees, javascript typing and now multi-tenancy. </p> <p>His new project, ONCE, intend to sell software in a new way a one time fee for a self-hosted software. Their first project is Campfire, a slack-like chat software.</p>"},{"location":"blog/saas-should-die-but-once-is-here/#how-does-it-work","title":"How does it work","text":"<p>The idea is very simple: you pay once, and you get the software, end of story. No monthly fee, no service fee, nothing. You get a single step setup procedure that you should host yourself, on your own server (whether it's on premise or on a cloud VM). </p> <p>Under the hood it relies on Docker to handle the installation on all platforms with a unique and personal (per-client) script to install the whole platform. Including SSL certificates, database (SQLITE), back-end (Ruby on Rails) and front-end. The whole setup procedure is a 5-minute thing, not so bad for a self-hosted software, maybe even faster than SaaS setup.</p> <p>For the user app side, they went with simplicity by only support PWA (Progressive Web App, it's like Webpage that you install in a borderless browser), controversial choice but very efficient in terms of development time. Does it scale ? Yes, a single Raspberry pi 5 deployment can handle 250 concurrent users.</p>"},{"location":"blog/saas-should-die-but-once-is-here/#but-why-is-it-so-good","title":"But why is it so good ?","text":"<p>There is multiple reasons why this idea is very promising:</p> <ul> <li>Full ownership: you own all of your software and data, do whatever you want with it, it's yours.</li> <li>Simplicity of the infrastructure: there is something beautiful about a software running on a single server, in its own container. Docker is a beautiful tool, it should be used more often.</li> <li>Predictable cost: one payment upfront, no surprise.</li> <li>Open-Source and Modding: because your instance code is yours you can do what you want with it and specifically add your new own features, and you can totally inspect the underlying code. This modding capability is one of the best thing that happened to video games, it's exciting to see it on software.</li> <li>New licence type: the ONCE licence is a tribute to MIT licence, and protect the copyright and distribution of the software while allowing modifications. It gives a great scaffold for people wanting to build ONCE-like software.  </li> </ul> <p>Customers get a predictable and cheap cost, easy to set up, privacy respecting, fully owned software. Seller gets a one-time payment, no extensive maintenance and support work (except for bug and security fix) and no SLA. It's a win-win situation.</p> <p>I think there is a lot of things to learn and inspiration to take from this project. Single payment, self-hosted easy to install software sounds like the future I wish software selling would pursue. Interesting blog post ? You can follow me on Twitter: @corentinm_py</p>"},{"location":"blog/good-bye-emails-welcome-telegram-alerts/","title":"TIL - Good bye emails welcome Telegram Alerts","text":"<p>How to send a telegram alert when your code finished running</p> <p>If you're doing machine learning or any kind of analysis using Python, you probably have been in a situation where you launch scripts that takes several minutes or hours to complete. In these situations you want to have a way to be notified that they finished with success. You have different solutions for this, but my favorite for now that I will show you in this TIL is to create a Telegram Bot that can send you message alerts directly on your phone.  This is very simple to set up and also compatible with any language that can make a simple GET/POST request.</p> <p>Telegram Bot Setup</p> <ol> <li>On your telegram account, send a DM containing <code>/newbot</code> to <code>https://t.me/BotFather</code> to create your bot. You will receive a token. Save this token.</li> <li>Then search for your bot name using the search bar and send it a message. And visit <code>https://api.telegram.org/bot&lt;YOUR_BOT_TOKEN&gt;/getUpdates</code> You will find here a JSON containing your account chatID inside: <code>result.0.message.from.id: &lt;YOUR_CHAT_ID&gt;</code>. Save this ID.</li> <li>With this token and this ID you can now send yourself alerts using some simple GET request to the URL <code>https://api.telegram.org/bot&lt;YOUR_BOT_TOKEN/sendMessage?chat_id=&lt;YOUR_CHAT_ID&gt;&amp;text=&lt;TEXT_OF_THE_ALERT&gt;</code></li> </ol> <p>Here is an example of a function in pure python that you can copy paste in your code and call to send an alert easily:</p> <pre><code>import requests\ndef send_telegram_alert(message=\"Finished Running\"):\n    # Replace 'YOUR_BOT_TOKEN' with the token you received from the BotFather\n    bot_token = \"&lt;YOUR_BOT_TOKEN&gt;\"\n    # Replace 'YOUR_CHAT_ID' with your Telegram chat id\n    chat_id = \"&lt;YOUR_CHAT_ID&gt;\"\n    # Set the API endpoint and the message text\n    api_endpoint = f\"https://api.telegram.org/bot{bot_token}/sendMessage\"\n\n    # Make the API request\n    response = requests.post(api_endpoint, json={\"chat_id\": chat_id, \"text\": message})\nsend_telegram_alert(\"Hey Corentin, your training finished running !\")\n</code></pre> <p>But you can also do the same for bash scripts !</p> <pre><code>bot_token='&lt;YOUR_BOT_TOKEN&gt;'\nchat_id='&lt;YOUR_CHAT_ID&gt;'\napi_endpoint=\"https://api.telegram.org/bot$bot_token/sendMessage\"\nmessage_text='Hey Corentin, your training finished running !'\ncurl -s -X POST $api_endpoint -d chat_id=$chat_id -d text=\"$message_text\"\n</code></pre> <p>And you could even do specific alerts when something failed:</p> <pre><code>try:\n    my_main_script_func()\n    send_telegram_alert(\"Your script finished running !\")\nexcept:\n    send_telegram_alert(\"Woops, something went wrong !\")\n</code></pre> <p>I think that a pretty cool tool simpler than email, effortless to setup and faster than manually checking !</p>"}]}